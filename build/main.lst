ARM GAS  /tmp/ccEc2rgR.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._write,"ax",%progbits
  16              		.align	1
  17              		.global	_write
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_write:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #define TMP100_ADDRESS  0x48 // TMP100 I2C address with ADD1 and ADD0 high
  28:Core/Src/main.c **** #define TMP100_TEMP_REG 0x00 // Temperature register address
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccEc2rgR.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** int _write(int file, char *data, int len) {
  28              		.loc 1 33 43 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 33 43 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1446     		mov	r4, r2
  34:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, len, HAL_MAX_DELAY);
  39              		.loc 1 34 5 is_stmt 1 view .LVU2
  40 0004 4FF0FF33 		mov	r3, #-1
  41 0008 92B2     		uxth	r2, r2
  42              	.LVL1:
  43              		.loc 1 34 5 is_stmt 0 view .LVU3
  44 000a 0248     		ldr	r0, .L3
  45              	.LVL2:
  46              		.loc 1 34 5 view .LVU4
  47 000c FFF7FEFF 		bl	HAL_UART_Transmit
  48              	.LVL3:
  35:Core/Src/main.c ****     return len;
  49              		.loc 1 35 5 is_stmt 1 view .LVU5
  36:Core/Src/main.c **** }
  50              		.loc 1 36 1 is_stmt 0 view .LVU6
  51 0010 2046     		mov	r0, r4
  52 0012 10BD     		pop	{r4, pc}
  53              	.LVL4:
  54              	.L4:
  55              		.loc 1 36 1 view .LVU7
  56              		.align	2
  57              	.L3:
  58 0014 00000000 		.word	huart1
  59              		.cfi_endproc
  60              	.LFE65:
  62              		.section	.text.Error_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	Error_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	Error_Handler:
  71              	.LFB68:
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
ARM GAS  /tmp/ccEc2rgR.s 			page 3


  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c ****    HAL_StatusTypeDef ret;
  74:Core/Src/main.c ****   uint8_t temp_buf[2]; // Buffer for temperature data from TMP100
  75:Core/Src/main.c ****   char uart_buf[20];   // Buffer for UART output
  76:Core/Src/main.c ****   int16_t temp_val;
  77:Core/Src/main.c ****   float temp_celsius;
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  98:Core/Src/main.c ****   MX_USART1_UART_Init();
  99:Core/Src/main.c ****   MX_I2C2_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  /tmp/ccEc2rgR.s 			page 4


 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* Request temperature data from TMP100 */
 108:Core/Src/main.c ****     ret = HAL_I2C_Mem_Read(&hi2c2, (TMP100_ADDRESS << 1)|0x01, TMP100_TEMP_REG, I2C_MEMADD_SIZE_8BI
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     if (ret != HAL_OK) {
 112:Core/Src/main.c ****         strcpy(uart_buf, "Error Rx\r\n");
 113:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
 114:Core/Src/main.c ****     } else {
 115:Core/Src/main.c ****         /* Convert raw data to Celsius */
 116:Core/Src/main.c ****         temp_val = ((int16_t)temp_buf[0] << 4) | (temp_buf[1] >> 4);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****         if (temp_val > 0x7FF) {
 119:Core/Src/main.c ****             temp_val |= 0xF000; // Sign extension for negative values
 120:Core/Src/main.c ****         }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****         temp_celsius = temp_val * 0.0625;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****         /* Print temperature over UART */
 125:Core/Src/main.c ****         snprintf(uart_buf, sizeof(uart_buf), "%d C\r\n", ((int)temp_celsius));
 126:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
 127:Core/Src/main.c ****     }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     HAL_Delay(1000); // 1-second delay between readings
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccEc2rgR.s 			page 5


 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE END 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void Error_Handler(void)
 182:Core/Src/main.c **** {
  72              		.loc 1 182 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 183:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 184:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 185:Core/Src/main.c ****   __disable_irq();
  78              		.loc 1 185 3 view .LVU9
  79              	.LBB4:
  80              	.LBI4:
  81              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccEc2rgR.s 			page 6


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccEc2rgR.s 			page 7


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccEc2rgR.s 			page 8


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  82              		.loc 2 140 27 view .LVU10
  83              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  84              		.loc 2 142 3 view .LVU11
  85              		.syntax unified
  86              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  87 0000 72B6     		cpsid i
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
  91              	.L6:
  92              	.LBE5:
  93              	.LBE4:
 186:Core/Src/main.c ****   while (1)
  94              		.loc 1 186 3 discriminator 1 view .LVU12
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****   }
  95              		.loc 1 188 3 discriminator 1 view .LVU13
 186:Core/Src/main.c ****   while (1)
  96              		.loc 1 186 9 discriminator 1 view .LVU14
  97 0002 FEE7     		b	.L6
  98              		.cfi_endproc
  99              	.LFE68:
 101              		.section	.text.SystemClock_Config,"ax",%progbits
 102              		.align	1
 103              		.global	SystemClock_Config
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	SystemClock_Config:
 110              	.LFB67:
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 111              		.loc 1 143 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 64
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 00B5     		push	{lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 4
 118              		.cfi_offset 14, -4
 119 0002 91B0     		sub	sp, sp, #68
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 72
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122              		.loc 1 144 3 view .LVU16
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 144 22 is_stmt 0 view .LVU17
 124 0004 2822     		movs	r2, #40
 125 0006 0021     		movs	r1, #0
 126 0008 06A8     		add	r0, sp, #24
 127 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccEc2rgR.s 			page 9


 128              	.LVL5:
 145:Core/Src/main.c **** 
 129              		.loc 1 145 3 is_stmt 1 view .LVU18
 145:Core/Src/main.c **** 
 130              		.loc 1 145 22 is_stmt 0 view .LVU19
 131 000e 0023     		movs	r3, #0
 132 0010 0193     		str	r3, [sp, #4]
 133 0012 0293     		str	r3, [sp, #8]
 134 0014 0393     		str	r3, [sp, #12]
 135 0016 0493     		str	r3, [sp, #16]
 136 0018 0593     		str	r3, [sp, #20]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137              		.loc 1 150 3 is_stmt 1 view .LVU20
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138              		.loc 1 150 36 is_stmt 0 view .LVU21
 139 001a 0123     		movs	r3, #1
 140 001c 0693     		str	r3, [sp, #24]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 141              		.loc 1 151 3 is_stmt 1 view .LVU22
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 142              		.loc 1 151 30 is_stmt 0 view .LVU23
 143 001e 4FF48033 		mov	r3, #65536
 144 0022 0793     		str	r3, [sp, #28]
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145              		.loc 1 152 3 is_stmt 1 view .LVU24
 153:Core/Src/main.c ****   {
 146              		.loc 1 153 3 view .LVU25
 153:Core/Src/main.c ****   {
 147              		.loc 1 153 7 is_stmt 0 view .LVU26
 148 0024 06A8     		add	r0, sp, #24
 149 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 150              	.LVL6:
 153:Core/Src/main.c ****   {
 151              		.loc 1 153 6 view .LVU27
 152 002a 70B9     		cbnz	r0, .L11
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153              		.loc 1 160 3 is_stmt 1 view .LVU28
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154              		.loc 1 160 31 is_stmt 0 view .LVU29
 155 002c 0F23     		movs	r3, #15
 156 002e 0193     		str	r3, [sp, #4]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157              		.loc 1 162 3 is_stmt 1 view .LVU30
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158              		.loc 1 162 34 is_stmt 0 view .LVU31
 159 0030 0123     		movs	r3, #1
 160 0032 0293     		str	r3, [sp, #8]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 161              		.loc 1 163 3 is_stmt 1 view .LVU32
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 162              		.loc 1 163 35 is_stmt 0 view .LVU33
 163 0034 0021     		movs	r1, #0
 164 0036 0391     		str	r1, [sp, #12]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 165              		.loc 1 164 3 is_stmt 1 view .LVU34
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166              		.loc 1 164 36 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccEc2rgR.s 			page 10


 167 0038 0491     		str	r1, [sp, #16]
 165:Core/Src/main.c **** 
 168              		.loc 1 165 3 is_stmt 1 view .LVU36
 165:Core/Src/main.c **** 
 169              		.loc 1 165 36 is_stmt 0 view .LVU37
 170 003a 0591     		str	r1, [sp, #20]
 167:Core/Src/main.c ****   {
 171              		.loc 1 167 3 is_stmt 1 view .LVU38
 167:Core/Src/main.c ****   {
 172              		.loc 1 167 7 is_stmt 0 view .LVU39
 173 003c 01A8     		add	r0, sp, #4
 174 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 175              	.LVL7:
 167:Core/Src/main.c ****   {
 176              		.loc 1 167 6 view .LVU40
 177 0042 20B9     		cbnz	r0, .L12
 171:Core/Src/main.c **** 
 178              		.loc 1 171 1 view .LVU41
 179 0044 11B0     		add	sp, sp, #68
 180              	.LCFI3:
 181              		.cfi_remember_state
 182              		.cfi_def_cfa_offset 4
 183              		@ sp needed
 184 0046 5DF804FB 		ldr	pc, [sp], #4
 185              	.L11:
 186              	.LCFI4:
 187              		.cfi_restore_state
 155:Core/Src/main.c ****   }
 188              		.loc 1 155 5 is_stmt 1 view .LVU42
 189 004a FFF7FEFF 		bl	Error_Handler
 190              	.LVL8:
 191              	.L12:
 169:Core/Src/main.c ****   }
 192              		.loc 1 169 5 view .LVU43
 193 004e FFF7FEFF 		bl	Error_Handler
 194              	.LVL9:
 195              		.cfi_endproc
 196              	.LFE67:
 198              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 199              		.align	2
 200              	.LC0:
 201 0000 4572726F 		.ascii	"Error Rx\015\012\000"
 201      72205278 
 201      0D0A00
 202              		.global	__aeabi_i2d
 203              		.global	__aeabi_dmul
 204              		.global	__aeabi_d2f
 205              		.global	__aeabi_f2iz
 206 000b 00       		.align	2
 207              	.LC1:
 208 000c 25642043 		.ascii	"%d C\015\012\000"
 208      0D0A00
 209              		.section	.text.main,"ax",%progbits
 210              		.align	1
 211              		.global	main
 212              		.syntax unified
 213              		.thumb
ARM GAS  /tmp/ccEc2rgR.s 			page 11


 214              		.thumb_func
 215              		.fpu softvfp
 217              	main:
 218              	.LFB66:
  70:Core/Src/main.c **** 
 219              		.loc 1 70 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 24
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 00B5     		push	{lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 8BB0     		sub	sp, sp, #44
 228              	.LCFI6:
 229              		.cfi_def_cfa_offset 48
  73:Core/Src/main.c ****   uint8_t temp_buf[2]; // Buffer for temperature data from TMP100
 230              		.loc 1 73 4 view .LVU45
  74:Core/Src/main.c ****   char uart_buf[20];   // Buffer for UART output
 231              		.loc 1 74 3 view .LVU46
  75:Core/Src/main.c ****   int16_t temp_val;
 232              		.loc 1 75 3 view .LVU47
  76:Core/Src/main.c ****   float temp_celsius;
 233              		.loc 1 76 3 view .LVU48
  77:Core/Src/main.c ****   /* USER CODE END 1 */
 234              		.loc 1 77 3 view .LVU49
  83:Core/Src/main.c **** 
 235              		.loc 1 83 3 view .LVU50
 236 0004 FFF7FEFF 		bl	HAL_Init
 237              	.LVL10:
  90:Core/Src/main.c **** 
 238              		.loc 1 90 3 view .LVU51
 239 0008 FFF7FEFF 		bl	SystemClock_Config
 240              	.LVL11:
  97:Core/Src/main.c ****   MX_USART1_UART_Init();
 241              		.loc 1 97 3 view .LVU52
 242 000c FFF7FEFF 		bl	MX_GPIO_Init
 243              	.LVL12:
  98:Core/Src/main.c ****   MX_I2C2_Init();
 244              		.loc 1 98 3 view .LVU53
 245 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 246              	.LVL13:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 247              		.loc 1 99 3 view .LVU54
 248 0014 FFF7FEFF 		bl	MX_I2C2_Init
 249              	.LVL14:
 250 0018 15E0     		b	.L17
 251              	.LVL15:
 252              	.L19:
 253              	.LBB6:
 112:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
 254              		.loc 1 112 9 view .LVU55
 255 001a 274A     		ldr	r2, .L20
 256 001c 04AB     		add	r3, sp, #16
 257 001e 07CA     		ldm	r2, {r0, r1, r2}
 258              	.LVL16:
 112:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
ARM GAS  /tmp/ccEc2rgR.s 			page 12


 259              		.loc 1 112 9 is_stmt 0 view .LVU56
 260 0020 03C3     		stmia	r3!, {r0, r1}
 261 0022 23F8022B 		strh	r2, [r3], #2	@ movhi
 262 0026 120C     		lsrs	r2, r2, #16
 263 0028 1A70     		strb	r2, [r3]
 113:Core/Src/main.c ****     } else {
 264              		.loc 1 113 9 is_stmt 1 view .LVU57
 113:Core/Src/main.c ****     } else {
 265              		.loc 1 113 56 is_stmt 0 view .LVU58
 266 002a 04A8     		add	r0, sp, #16
 267 002c FFF7FEFF 		bl	strlen
 268              	.LVL17:
 113:Core/Src/main.c ****     } else {
 269              		.loc 1 113 9 view .LVU59
 270 0030 4FF0FF33 		mov	r3, #-1
 271 0034 82B2     		uxth	r2, r0
 272 0036 04A9     		add	r1, sp, #16
 273 0038 2048     		ldr	r0, .L20+4
 274 003a FFF7FEFF 		bl	HAL_UART_Transmit
 275              	.LVL18:
 276              	.L15:
 277              	.LBE6:
 129:Core/Src/main.c ****   }
 278              		.loc 1 129 5 is_stmt 1 view .LVU60
 279 003e 4FF47A70 		mov	r0, #1000
 280 0042 FFF7FEFF 		bl	HAL_Delay
 281              	.LVL19:
 105:Core/Src/main.c ****   {
 282              		.loc 1 105 9 view .LVU61
 283              	.L17:
 105:Core/Src/main.c ****   {
 284              		.loc 1 105 3 view .LVU62
 108:Core/Src/main.c **** 
 285              		.loc 1 108 5 view .LVU63
 108:Core/Src/main.c **** 
 286              		.loc 1 108 11 is_stmt 0 view .LVU64
 287 0046 4FF0FF33 		mov	r3, #-1
 288 004a 0293     		str	r3, [sp, #8]
 289 004c 0223     		movs	r3, #2
 290 004e 0193     		str	r3, [sp, #4]
 291 0050 09AB     		add	r3, sp, #36
 292 0052 0093     		str	r3, [sp]
 293 0054 0123     		movs	r3, #1
 294 0056 0022     		movs	r2, #0
 295 0058 9121     		movs	r1, #145
 296 005a 1948     		ldr	r0, .L20+8
 297 005c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 298              	.LVL20:
 111:Core/Src/main.c ****         strcpy(uart_buf, "Error Rx\r\n");
 299              		.loc 1 111 5 is_stmt 1 view .LVU65
 111:Core/Src/main.c ****         strcpy(uart_buf, "Error Rx\r\n");
 300              		.loc 1 111 8 is_stmt 0 view .LVU66
 301 0060 0028     		cmp	r0, #0
 302 0062 DAD1     		bne	.L19
 303              	.LBB7:
 116:Core/Src/main.c **** 
 304              		.loc 1 116 9 is_stmt 1 view .LVU67
ARM GAS  /tmp/ccEc2rgR.s 			page 13


 116:Core/Src/main.c **** 
 305              		.loc 1 116 38 is_stmt 0 view .LVU68
 306 0064 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 116:Core/Src/main.c **** 
 307              		.loc 1 116 59 view .LVU69
 308 0068 9DF82500 		ldrb	r0, [sp, #37]	@ zero_extendqisi2
 309              	.LVL21:
 116:Core/Src/main.c **** 
 310              		.loc 1 116 48 view .LVU70
 311 006c 0009     		lsrs	r0, r0, #4
 116:Core/Src/main.c **** 
 312              		.loc 1 116 18 view .LVU71
 313 006e 40EA0310 		orr	r0, r0, r3, lsl #4
 314              	.LVL22:
 118:Core/Src/main.c ****             temp_val |= 0xF000; // Sign extension for negative values
 315              		.loc 1 118 9 is_stmt 1 view .LVU72
 118:Core/Src/main.c ****             temp_val |= 0xF000; // Sign extension for negative values
 316              		.loc 1 118 12 is_stmt 0 view .LVU73
 317 0072 B0F5006F 		cmp	r0, #2048
 318 0076 03DB     		blt	.L16
 119:Core/Src/main.c ****         }
 319              		.loc 1 119 13 is_stmt 1 view .LVU74
 119:Core/Src/main.c ****         }
 320              		.loc 1 119 22 is_stmt 0 view .LVU75
 321 0078 6FEA0050 		mvn	r0, r0, lsl #20
 322              	.LVL23:
 119:Core/Src/main.c ****         }
 323              		.loc 1 119 22 view .LVU76
 324 007c 6FEA1050 		mvn	r0, r0, lsr #20
 325              	.LVL24:
 326              	.L16:
 122:Core/Src/main.c **** 
 327              		.loc 1 122 9 is_stmt 1 view .LVU77
 122:Core/Src/main.c **** 
 328              		.loc 1 122 33 is_stmt 0 view .LVU78
 329 0080 FFF7FEFF 		bl	__aeabi_i2d
 330              	.LVL25:
 122:Core/Src/main.c **** 
 331              		.loc 1 122 33 view .LVU79
 332 0084 0022     		movs	r2, #0
 333 0086 0F4B     		ldr	r3, .L20+12
 334 0088 FFF7FEFF 		bl	__aeabi_dmul
 335              	.LVL26:
 122:Core/Src/main.c **** 
 336              		.loc 1 122 22 view .LVU80
 337 008c FFF7FEFF 		bl	__aeabi_d2f
 338              	.LVL27:
 125:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
 339              		.loc 1 125 9 is_stmt 1 view .LVU81
 340 0090 FFF7FEFF 		bl	__aeabi_f2iz
 341              	.LVL28:
 125:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)uart_buf, strlen(uart_buf), HAL_MAX_DELAY);
 342              		.loc 1 125 9 is_stmt 0 view .LVU82
 343 0094 0346     		mov	r3, r0
 344 0096 0C4A     		ldr	r2, .L20+16
 345 0098 1421     		movs	r1, #20
 346 009a 04A8     		add	r0, sp, #16
ARM GAS  /tmp/ccEc2rgR.s 			page 14


 347 009c FFF7FEFF 		bl	snprintf
 348              	.LVL29:
 126:Core/Src/main.c ****     }
 349              		.loc 1 126 9 is_stmt 1 view .LVU83
 126:Core/Src/main.c ****     }
 350              		.loc 1 126 56 is_stmt 0 view .LVU84
 351 00a0 04A8     		add	r0, sp, #16
 352 00a2 FFF7FEFF 		bl	strlen
 353              	.LVL30:
 126:Core/Src/main.c ****     }
 354              		.loc 1 126 9 view .LVU85
 355 00a6 4FF0FF33 		mov	r3, #-1
 356 00aa 82B2     		uxth	r2, r0
 357 00ac 04A9     		add	r1, sp, #16
 358 00ae 0348     		ldr	r0, .L20+4
 359 00b0 FFF7FEFF 		bl	HAL_UART_Transmit
 360              	.LVL31:
 361 00b4 C3E7     		b	.L15
 362              	.L21:
 363 00b6 00BF     		.align	2
 364              	.L20:
 365 00b8 00000000 		.word	.LC0
 366 00bc 00000000 		.word	huart1
 367 00c0 00000000 		.word	hi2c2
 368 00c4 0000B03F 		.word	1068498944
 369 00c8 0C000000 		.word	.LC1
 370              	.LBE7:
 371              		.cfi_endproc
 372              	.LFE66:
 374              		.text
 375              	.Letext0:
 376              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 377              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 378              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 379              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 380              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 381              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 382              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 383              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 384              		.file 11 "Core/Inc/i2c.h"
 385              		.file 12 "Core/Inc/usart.h"
 386              		.file 13 "<built-in>"
 387              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 388              		.file 15 "Core/Inc/gpio.h"
ARM GAS  /tmp/ccEc2rgR.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEc2rgR.s:16     .text._write:0000000000000000 $t
     /tmp/ccEc2rgR.s:24     .text._write:0000000000000000 _write
     /tmp/ccEc2rgR.s:58     .text._write:0000000000000014 $d
     /tmp/ccEc2rgR.s:63     .text.Error_Handler:0000000000000000 $t
     /tmp/ccEc2rgR.s:70     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEc2rgR.s:102    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEc2rgR.s:109    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEc2rgR.s:199    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccEc2rgR.s:210    .text.main:0000000000000000 $t
     /tmp/ccEc2rgR.s:217    .text.main:0000000000000000 main
     /tmp/ccEc2rgR.s:365    .text.main:00000000000000b8 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_f2iz
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_I2C2_Init
strlen
HAL_Delay
HAL_I2C_Mem_Read
snprintf
hi2c2
